Book https://www.safaribooksonline.com/library/view/microservices-deployment-cookbook/9781786469434/ch03s02.html

** Install Docker toolbox

docker-machine ls
docker-machine create -d virtualbox --virtualbox-memory=4096 --virtualbox-cpu-count=2 default
eval $(docker-machine env default)
docker ps -a

*** SET
export COMPOSE_CONVERT_WINDOWS_PATHS=1

** Setup cluster
docker-compose -f docker-compose-mesos.yml up

clean reset of cluster
docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q) && docker-compose -f docker-compose-mesos.yml up

*** Build docker-image - Simple

docker build -t ganesh/geolocation .
docker run -p 8080:8080 ganesh/geolocation
docker-machine ip default

*** Incremenation deployment script

mvn clean package -DskipTests
docker stop $(docker ps -a | grep "manjesh80/geolocation" | awk '{print $1}')
docker rm $(docker ps -a | grep "manjesh80/geolocation" | awk '{print $1}')
docker rmi -f $(docker images | grep "manjesh80/geolocation" | awk '{print $3}' )
docker build -t manjesh80/geolocation:latest -t manjesh80/geolocation:v3.5 .
docker push manjesh80/geolocation:latest
docker push manjesh80/geolocation:v3.5


**** Miscellaneous commands

docker tag ganesh/geolocation manjesh80/geolocation
docker push manjesh80/geolocation

winpty docker login

docker -ps -a -q
docker ps -a
docker rm $(docker ps -a -q)

Marathon URLs

http://192.168.99.100:8080/v2/apps

Marthon automatically deploy an application

curl -H "Content-Type: application/json" -X POST -d '{"id": "/geolocation", "cmd": null, "cpus": 1, "mem": 512, "disk": 1024, "instances": 1, "container": {"type": "DOCKER", "volumes": [{"containerPath": "/opt/ganesh/geolocation/data", "hostPath": "/opt/ganesh/geolocation/data", "mode": "RW"} ], "docker": {"image": "manjesh80/geolocation:v3.6", "network": "BRIDGE", "portMappings": [{"containerPort": 8080, "hostPort": 0, "servicePort": 8899, "protocol": "tcp", "labels": {} } ], "privileged": false, "parameters": [], "forcePullImage": false } } }' http://192.168.99.100:8080/v2/apps

Update  - PUT method and URL will be have app name in the en
curl -H "Content-Type: application/json" -X PUT -d '{"id": "/geolocation", "cmd": null, "cpus": 1, "mem": 512, "disk": 1024, "instances": 2, "container": {"type": "DOCKER", "volumes": [{"containerPath": "/opt/ganesh/geolocation/data", "hostPath": "/opt/ganesh/geolocation/data", "mode": "RW"} ], "docker": {"image": "manjesh80/geolocation:v3.6", "network": "BRIDGE", "portMappings": [{"containerPort": 8080, "hostPort": 0, "servicePort": 8899, "protocol": "tcp", "labels": {} } ], "privileged": false, "parameters": [], "forcePullImage": false } } }' http://192.168.99.100:8080/v2/apps/geolocation

curl http://192.168.99.100:8080/v2/apps/geolocation

curl -X DELETE http://192.168.99.100:8080/v2/apps/geolocation

